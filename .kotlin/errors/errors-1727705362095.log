kotlin version: 2.0.20
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/lap15332/AndroidStudioProjects/GithubAdmin/landing/src/main/java/hoa/kv/githubadmin/landing/MainView.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:MainView visibility:public modality:FINAL <> (modifier:androidx.compose.ui.Modifier, viewModel:hoa.kv.githubadmin.landing.MainViewModel, onItemUserClicked:kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:modifier index:0 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:viewModel index:1 type:hoa.kv.githubadmin.landing.MainViewModel
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=hoa.kv.githubadmin.landing.MainViewModel
  VALUE_PARAMETER name:onItemUserClicked index:2 type:kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>
  BLOCK_BODY
    VAR name:users type:androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> origin=null
        <T>: androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun MainView$lambda$0 (): androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> declared in hoa.kv.githubadmin.landing.MainViewKt' type=kotlin.Function0<androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:uiState$delegate type:androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> [val]
      CALL 'public final fun observeAsState <T> (): androidx.compose.runtime.State<T of androidx.compose.runtime.livedata.LiveDataAdapterKt.observeAsState?> declared in androidx.compose.runtime.livedata.LiveDataAdapterKt' type=androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> origin=null
        <T>: hoa.kv.githubadmin.landing.MainUiState
        $receiver: CALL 'public final fun <get-uiState> (): androidx.lifecycle.LiveData<hoa.kv.githubadmin.landing.MainUiState> declared in hoa.kv.githubadmin.landing.MainViewModel' type=androidx.lifecycle.LiveData<hoa.kv.githubadmin.landing.MainUiState> origin=GET_PROPERTY
          $this: GET_VAR 'viewModel: hoa.kv.githubadmin.landing.MainViewModel declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=hoa.kv.githubadmin.landing.MainViewModel origin=null
    CALL 'private final fun MainViewContent (modifier: androidx.compose.ui.Modifier, users: kotlin.collections.List<hoa.kv.githubadmin.repository.model.User>, loadMore: kotlin.Function0<kotlin.Unit>, onItemUserClicked: kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>): kotlin.Unit declared in hoa.kv.githubadmin.landing.MainViewKt' type=kotlin.Unit origin=null
      modifier: CALL 'public final fun background-bw27NRU$default (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
        $receiver: CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.ui.Modifier origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
        color: CALL 'public final fun getWhite-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color.Companion' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Color.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color.Companion origin=null
        shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.graphics.Shape? value=null
        $mask0: CONST Int type=kotlin.Int value=2
        $handler: CONST Null type=kotlin.Any? value=null
      users: GET_VAR 'val users: androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> origin=null
      loadMore: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
          <T>: kotlin.Function0<kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: hoa.kv.githubadmin.landing.MainViewModel): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            p0: GET_VAR 'viewModel: hoa.kv.githubadmin.landing.MainViewModel declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=hoa.kv.githubadmin.landing.MainViewModel origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun MainView$lambda$2 ($viewModel: hoa.kv.githubadmin.landing.MainViewModel): kotlin.Unit? declared in hoa.kv.githubadmin.landing.MainViewKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      onItemUserClicked: BLOCK type=kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> origin=null
          <T>: kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>): kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> origin=null
            p0: GET_VAR 'onItemUserClicked: kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit> origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun MainView$lambda$3 ($onItemUserClicked: kotlin.Function1<hoa.kv.githubadmin.repository.model.User, kotlin.Unit>, user: hoa.kv.githubadmin.repository.model.User): kotlin.Unit? declared in hoa.kv.githubadmin.landing.MainViewKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: hoa.kv.githubadmin.repository.model.User): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
    COMPOSITE type=kotlin.Unit origin=null
      BLOCK type=kotlin.Any origin=WHEN
        VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:hoa.kv.githubadmin.landing.MainUiState? [val]
          CALL 'private final fun MainView$lambda$1 ($uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?>): hoa.kv.githubadmin.landing.MainUiState? declared in hoa.kv.githubadmin.landing.MainViewKt' type=hoa.kv.githubadmin.landing.MainUiState? origin=GET_LOCAL_PROPERTY
            $uiState$delegate: GET_VAR 'val uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> origin=null
        WHEN type=kotlin.Any origin=WHEN
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=hoa.kv.githubadmin.landing.MainUiState.Loading
              GET_VAR 'val tmp0_subject: hoa.kv.githubadmin.landing.MainUiState? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=hoa.kv.githubadmin.landing.MainUiState? origin=null
            then: CALL 'public final fun CircularLoadingProgress (): kotlin.Unit declared in hoa.kv.githubadmin.systemdesign.loading.CircularLoadingProgressKt' type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess
              GET_VAR 'val tmp0_subject: hoa.kv.githubadmin.landing.MainUiState? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=hoa.kv.githubadmin.landing.MainUiState? origin=null
            then: BLOCK type=kotlin.Boolean origin=null
              CALL 'public open fun clear (): kotlin.Unit declared in androidx.compose.runtime.snapshots.SnapshotStateList' type=kotlin.Unit origin=null
                $this: GET_VAR 'val users: androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> origin=null
              CALL 'public open fun addAll (elements: kotlin.collections.Collection<T of androidx.compose.runtime.snapshots.SnapshotStateList>): kotlin.Boolean declared in androidx.compose.runtime.snapshots.SnapshotStateList' type=kotlin.Boolean origin=null
                $this: GET_VAR 'val users: androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> origin=null
                elements: CALL 'public final fun <get-users> (): kotlin.collections.List<hoa.kv.githubadmin.repository.model.User> declared in hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess' type=kotlin.collections.List<hoa.kv.githubadmin.repository.model.User> origin=GET_PROPERTY
                  $this: BLOCK type=hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess origin=null
                    VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
                      CALL 'private final fun MainView$lambda$1 ($uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?>): hoa.kv.githubadmin.landing.MainUiState? declared in hoa.kv.githubadmin.landing.MainViewKt' type=hoa.kv.githubadmin.landing.MainUiState? origin=GET_LOCAL_PROPERTY
                        $uiState$delegate: GET_VAR 'val uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> origin=null
                    CALL 'public final fun checkNotNull (object: kotlin.Any?, message: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                      object: GET_VAR 'val tmp0: kotlin.Any? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Any? origin=null
                      message: CONST String type=kotlin.String value="null cannot be cast to non-null type hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess"
                    TYPE_OP type=hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess? origin=CAST typeOperand=hoa.kv.githubadmin.landing.MainUiState.GetUsersSuccess?
                      GET_VAR 'val tmp0: kotlin.Any? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Any? origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=hoa.kv.githubadmin.landing.MainUiState.GetUsersError
              GET_VAR 'val tmp0_subject: hoa.kv.githubadmin.landing.MainUiState? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=hoa.kv.githubadmin.landing.MainUiState? origin=null
            then: BLOCK type=kotlin.Unit origin=null
              VAR name:errorMessageRes type:kotlin.Int [val]
                CALL 'public final fun <get-errorMessage> (): kotlin.Int declared in hoa.kv.githubadmin.landing.MainUiState.GetUsersError' type=kotlin.Int origin=GET_PROPERTY
                  $this: BLOCK type=hoa.kv.githubadmin.landing.MainUiState.GetUsersError origin=null
                    VAR IR_TEMPORARY_VARIABLE name:tmp1 type:kotlin.Any? [val]
                      CALL 'private final fun MainView$lambda$1 ($uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?>): hoa.kv.githubadmin.landing.MainUiState? declared in hoa.kv.githubadmin.landing.MainViewKt' type=hoa.kv.githubadmin.landing.MainUiState? origin=GET_LOCAL_PROPERTY
                        $uiState$delegate: GET_VAR 'val uiState$delegate: androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=androidx.compose.runtime.State<hoa.kv.githubadmin.landing.MainUiState?> origin=null
                    CALL 'public final fun checkNotNull (object: kotlin.Any?, message: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
                      object: GET_VAR 'val tmp1: kotlin.Any? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Any? origin=null
                      message: CONST String type=kotlin.String value="null cannot be cast to non-null type hoa.kv.githubadmin.landing.MainUiState.GetUsersError"
                    TYPE_OP type=hoa.kv.githubadmin.landing.MainUiState.GetUsersError? origin=CAST typeOperand=hoa.kv.githubadmin.landing.MainUiState.GetUsersError?
                      GET_VAR 'val tmp1: kotlin.Any? [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Any? origin=null
              CALL 'public open fun show (): kotlin.Unit declared in android.widget.Toast' type=kotlin.Unit origin=null
                $this: CALL 'public open fun makeText (p0: @[FlexibleNullability] android.content.Context?, p1: @[FlexibleNullability] kotlin.CharSequence?, p2: kotlin.Int): @[FlexibleNullability] android.widget.Toast? declared in android.widget.Toast' type=@[FlexibleNullability] android.widget.Toast? origin=null
                  p0: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
                    $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
                      CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
                  p1: CALL 'public final fun stringResource (id: kotlin.Int): kotlin.String declared in androidx.compose.ui.res.StringResources_androidKt' type=kotlin.String origin=null
                    id: GET_VAR 'val errorMessageRes: kotlin.Int [val] declared in hoa.kv.githubadmin.landing.MainViewKt.MainView' type=kotlin.Int origin=null
                  p2: CONST Int type=kotlin.Int value=0
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: BLOCK type=kotlin.Unit origin=null
      COMPOSITE type=kotlin.Unit origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.snapshots.SnapshotStateList<hoa.kv.githubadmin.repository.model.User> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 69 more


